services:

  router:
    build: ./router
    cap_add:
      - NET_ADMIN
    hostname: router
    container_name: router
    networks:
      internal_net:
        ipv4_address: 172.28.0.2
      external_net:
        ipv4_address: 172.30.0.2
    volumes:
      - router_logs:/var/log/nginx
  attacker:
    build: ./attacker
    hostname: attacker
    container_name: attacker
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 172.30.0.33

  attacker2:
    build: ./attacker
    hostname: attacker2
    container_name: attacker2
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 172.30.0.7

  attacker3:
    build: ./attacker
    hostname: attacker3
    container_name: attacker3
    command: sleep infinity
    networks:
      internal_net:
        ipv4_address: 172.28.0.13

  attacker4:
    build: ./attacker
    hostname: attacker4
    container_name: attacker4
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 172.30.0.8

  webserver:
    build: ./webserver
    cap_add:
      - NET_ADMIN
    hostname: webserver
    container_name: webserver
    networks:
      internal_net:
        ipv4_address: 172.28.0.3
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      /docker-entrypoint.sh nginx -g 'daemon off;'"
    volumes:
      - webserver_logs:/var/log/nginx
  dns:
    image: andyshinn/dnsmasq
    entrypoint: []
    container_name: dns
    networks:
      internal_net:
        ipv4_address: 172.28.0.21
    cap_add:
      - NET_ADMIN
    ports:
      - "53:53/udp"
    volumes:
      - dns_logs:/dns-logs
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      dnsmasq -k --log-facility=/dns-logs/dnsmasq.log --log-queries"
  dns_uf:
    build: ./dns_uf
    container_name: dns_uf
    hostname: dns_uf
    networks:
      internal_net:
        ipv4_address: 172.28.0.5
    volumes:
      - dns_logs:/dns-logs:ro
    user: 
      root
  user1:
    build: ./external_user
    hostname: user1
    container_name: user1
    cap_add:
      - NET_ADMIN
    networks:
      external_net:
        ipv4_address: 172.30.0.4
    command: sleep infinity
  user2:
    build: ./external_user
    hostname: user2
    container_name: user2
    cap_add:
      - NET_ADMIN
    networks:
      external_net:
        ipv4_address: 172.30.0.5
    command: sleep infinity
  user3:
    build: ./external_user
    hostname: user3
    container_name: user3
    cap_add:
      - NET_ADMIN
    networks:
      external_net:
        ipv4_address: 172.30.0.6
    command: sleep infinity
  internal_user1:
    build: ./internal_user
    hostname: internal_user1
    container_name: internal_user1
    cap_add:
      - NET_ADMIN
    networks:
      internal_net:
        ipv4_address: 172.28.0.10
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      tail -f /dev/null"
  internal_user2:
    build: ./internal_user
    hostname: internal_user2
    container_name: internal_user2
    cap_add:
      - NET_ADMIN
    networks:
      internal_net:
        ipv4_address: 172.28.0.11
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      tail -f /dev/null"
  internal_user3:
    build: ./internal_user
    hostname: internal_user3
    container_name: internal_user3
    cap_add:
      - NET_ADMIN
    networks:
      internal_net:
        ipv4_address: 172.28.0.12
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      tail -f /dev/null"
  # ddos:
  #   build: ./ddos
  #   networks:
  #     external_net:
  #   deploy:
  #     replicas: 5

networks:
  internal_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
  external_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  webserver_logs:
  dns_logs:
  router_logs:
