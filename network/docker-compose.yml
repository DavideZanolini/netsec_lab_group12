services:
  router:
    build: ./router
    container_name: router
    networks:
      external_net:
        ipv4_address: 10.0.1.200
      internal_net:
        ipv4_address: 192.168.1.200
    privileged: true
  attacker:
    build: ./attacker
    container_name: attacker
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 10.0.1.10
    privileged: true

  user1:
    image: ubuntu
    container_name: user1
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 10.0.1.2

  user2:
    image: ubuntu
    container_name: user2
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 10.0.1.3
  user3:
    image: ubuntu
    container_name: user3
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 10.0.1.4
  internal_user1:
    image: ubuntu
    container_name: internal_user1
    command: sleep infinity
    networks:
      internal_net:
        ipv4_address: 192.168.1.10
  internal_user2:
    image: ubuntu
    container_name: internal_user2
    command: sleep infinity
    networks:
      internal_net:
        ipv4_address: 192.168.1.11
  internal_user3:
    image: ubuntu
    container_name: internal_user3
    command: sleep infinity
    networks:
      internal_net:
        ipv4_address: 192.168.1.12
  webserver:
    image: nginx
    container_name: webserver
    networks:
      internal_net:
        ipv4_address: 192.168.1.20
  dns:
    image: andyshinn/dnsmasq
    container_name: dns
    command: -k --log-facility=-
    networks:
      internal_net:
        ipv4_address: 192.168.1.21
    cap_add:
      - NET_ADMIN
    ports:
      - "53:53/udp"
  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=changeme
    ports:
      - "8000:8000"   # Web UI
      - "8088:8088"   # HEC endpoint
    networks:
      external_net:
        ipv4_address: 10.0.1.6
    healthcheck:
      test: curl -f http://localhost:8000 || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
  # mitre_server:
  #   image: mitre/attack-server:latest
  #   container_name: mitre_server
  #   command: sleep infinity
  #   networks:
  #     internal_net:
  #       ipv4_address: 192.168.1.30
  #   ports:
  #     - "8080:8080"   # Expose the MITRE server web interface
  traffic_generator:
    image: python:3.9-slim
    container_name: traffic_generator
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 10.0.1.101
      internal_net:
        ipv4_address: 192.168.1.101
    depends_on:
      - user1
      - user2
      - user3
      - internal_user1
      - internal_user2
      - internal_user3
      - webserver
      - dns
    volumes:
      - ./traffic_generator:/traffic_generator

networks:
  external_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24

  internal_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

