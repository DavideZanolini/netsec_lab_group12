services:

  router:
    build: ./router
    cap_add:
      - NET_ADMIN
    hostname: router
    container_name: router
    networks:
      internal_net:
        ipv4_address: 172.28.0.2
      external_net:
        ipv4_address: 172.30.0.2
  attacker:
    build: ./attacker
    hostname: attacker
    container_name: attacker
    command: sleep infinity
    networks:
      external_net:
        ipv4_address: 172.30.0.3
  webserver:
    build: ./webserver
    cap_add:
      - NET_ADMIN
    hostname: webserver
    container_name: webserver
    networks:
      internal_net:
        ipv4_address: 172.28.0.3
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      /docker-entrypoint.sh nginx -g 'daemon off;'"
    volumes:
      - webserver_logs:/var/log/nginx
  webserver_uf:
    build: ./webserver_uf
    container_name: webserver_uf
    hostname: webserver_uf
    networks:
      internal_net:
        ipv4_address: 172.28.0.4
    volumes:
      - webserver_logs:/nginx-logs:ro
    user: 
      root 
  dns:
    image: andyshinn/dnsmasq
    entrypoint: []
    container_name: dns
    networks:
      internal_net:
        ipv4_address: 172.28.0.21
    cap_add:
      - NET_ADMIN
    ports:
      - "53:53/udp"
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      dnsmasq -k --log-facility=-"
  splunk:
    build: ./splunk
    hostname: splunk
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=netsec25
    ports:
      - "8000:8000"   # Web UI
      - "8088:8088"   # HEC endpoint
      - "9997:9997"   # UF
    cap_add:
      - NET_ADMIN
    networks:
      internal_net:
        ipv4_address: 172.28.0.100
    healthcheck:
      test: curl -f http://localhost:8000 || exit 1
      interval: 60s
      timeout: 10s
      retries: 5
  user1:
    build: ./external_user
    hostname: user1
    container_name: user1
    cap_add:
      - NET_ADMIN
    networks:
      external_net:
        ipv4_address: 172.30.0.4
    command: sleep infinity
  user2:
    build: ./external_user
    hostname: user2
    container_name: user2
    cap_add:
      - NET_ADMIN
    networks:
      external_net:
        ipv4_address: 172.30.0.5
    command: sleep infinity
  user3:
    build: ./external_user
    hostname: user3
    container_name: user3
    cap_add:
      - NET_ADMIN
    networks:
      external_net:
        ipv4_address: 172.30.0.6
    command: sleep infinity
  internal_user1:
    build: ./internal_user
    hostname: internal_user1
    container_name: internal_user1
    cap_add:
      - NET_ADMIN
    networks:
      internal_net:
        ipv4_address: 172.28.0.10
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      tail -f /dev/null"
  internal_user2:
    build: ./internal_user
    hostname: internal_user2
    container_name: internal_user2
    cap_add:
      - NET_ADMIN
    networks:
      internal_net:
        ipv4_address: 172.28.0.11
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      tail -f /dev/null"
  internal_user3:
    build: ./internal_user
    hostname: internal_user3
    container_name: internal_user3
    cap_add:
      - NET_ADMIN
    networks:
      internal_net:
        ipv4_address: 172.28.0.12
    command: >-
      sh -c "ip route del default &&
      ip route add default via 172.28.0.2 &&
      tail -f /dev/null"
  ddos:
    build: ./ddos
    networks:
      external_net:
    deploy:
      replicas: 5

networks:
  internal_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
  external_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  webserver_logs:
